{
  "name": "nooline",
  "preferGlobal": "false",
  "version": "0.1.9",
  "author": {
    "name": "Skyler Brungardt",
    "email": "skyler.brungardt@gmail.com",
    "url": "skylerbrungardt.com"
  },
  "description": "A CMS focused on ease of use, scalability, and easy maintenance.",
  "contributors": [],
  "bin": {},
  "scripts": {
    "start": "nooline.js"
  },
  "main": "./nooline.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/StrictlySkyler/nooline.git"
  },
  "keywords": [
    "cms",
    "content",
    "content management system",
    "wordpress",
    "drupal"
  ],
  "dependencies": {
    "zombie": ">=0.12.15"
  },
  "noAnalyze": false,
  "devDependencies": {},
  "bundleDependencies": [],
  "license": "GPL 3.0",
  "engines": {
    "node": ">=0.6.x"
  },
  "homepage": "http://nooline.org",
  "subdomain": "nooline",
  "env": {
    "SUBDOMAIN": "nooline",
    "NODE_ENV": "production",
    "port": 80
  },
  "domains": [],
  "databases": {},
  "ctime": 1328205215215,
  "mtime": 1328206141334,
  "last": {
    "id": "0.1.6-7",
    "ctime": 1328205881720,
    "md5": "066ec4aba025061cda527664a68cf4b4",
    "filename": "strictlyskyler-nooline-0.1.2.tgz",
    "active": false,
    "running": false
  },
  "running": {
    "id": "0.1.6-7",
    "ctime": 1328206138735,
    "md5": "e38d7298db507d57e2097428cb85ba05",
    "filename": "strictlyskyler-nooline-0.1.2-1.tgz",
    "active": false,
    "running": false
  },
  "readme": "## What is nooline?\n\nIt’s a content management system focused on making managing content\ndrop-dead simple, super-extra easy. The goal of the platform is to\nreduce the time it takes not only to push out new content, but also\nupdate and modify the platform itself to be used in a new context.\n\n## A note on pronunciation\n\nWhen talking about “\\\\nooline”, I always tend to pronounce it\nphonetically, as in “NEW-line”, and its eponymous character. It’s worth\ncalling out, however, that there could be a case made for calling it\n“NO-align”, as the name is common in structure to [“noosphere”][], and\nindeed the idea for the project was influenced by that concept and [Eric\nRaymond’s article][] about it.\n\nAll of that said, pronunciation isn’t so big a deal as to pick a nit\nover it.\n\n## Another CMS? WTF.\n\nThere are plenty of other CMS platforms out in the wild today, and even\na few running on node.js (which \\\\n runs on also), but none that hit\nquite the right sweet spot for my taste. Having worked on a number of\nthese over the years, and being possessed of a desire to dive into and\nlearn new tech, I decided I’d scratch my particular itch myself.\n\n\\\\n will attempt to do things that those platforms are unable to\naccomplish due to technical reasons, lack of support, divergence in\nphilosophy, or any number of other reasons.\n\n## The Philosophy\n\nThere is a core set of principles which guide my development with \\\\n.\nThey are:\n\n1.  **There should be a *near-zero* amount of training time required to\nlet a content editor use the platform.** All controls should be\nblatantly self-evident in use, and naming conventions should be\npainstakingly easy to understand. Don’t refresh the page or go to a\nnew one unless it’s 100% unavoidable.\n2.  **Editing and modifying the system should require *minimal* amounts\nof work.** Where possible, share code between client and server, and\nrely upon native functionality within browsers or node. Store data\nin simple structures.\n3.  **Push as much work to the *client* as is reasonably possible.**\nJavaScript engines in clients are blazingly fast. Save the server\nthe work, and let the client do as much of it as it can. This should\nnot compromise the end user experience.\n4.  ***As few dependencies as possible* should be needed to stand up and\nrun and instance.** The platform should remain as agnostic as\npossible with regards to other frameworks and modules, and the\nnumber of tightly-coupled platforms should be kept to a minimum.\n5.  **The End User Experience is *never* compromised to due technical\nchallenges.** This is the most important part, and it includes web\nadmins, content editors, and developers as End Users.\n\nFor a related and simple set of informing guidelines, see [The Unix\nPhilosophy][].\n\n## How it works\n\n\\\\n is built on a straight node.js stack, and is independent of any\nspecific frameworks. It is built using html5, CSS3, and JavaScript,\ntransmits and stores its data in JSON and flat text files, and defers as\nmuch work as is possible on the back-end to the operating system’s\nnative capabilities. All content loading, updating, and creating is done\nvia AJAX, and html snapshots are taken to provide support for those web\nbots that don’t do it themselves, or aren’t headless browsers.\n\n*\"But AJAX means that search bots won't do anything, and SEO is out the window!  No way!\"*\n\nNot entirely true.  By providing snapshots of a completed HTML page, gathered by a headless browser, we can still provide all the SEO goodness that any other page might have otherwise.  (Google is already doing this, FWIW; their bot renders the whole page as if it was a browser anyway.)\n\nThe following are key components of the \\\\n stack:\n\n### node.js\n\nThe asynchronous, fast, JavaScript-based environment of node seemed like\nan obvious choice for this platform. Sharing code between client and\nserver brings the potential to make plugins rapidly and quickly, and\nreduces the level of effort or number of people required to modify the\nsystem. Where possible, keeping node as the primary server-side tech is\nideal.\n\n### html5 & Modern Browsers\n\nThere’s really no reason not to use html5 nowadays, in my opinion. :-)\nThere are plenty of polyfills available for anyone who wants to include\nout-of-date browsers. The core of \\\\n, however, should stay current with\nthe latest browsers, and leave dinosaurs to become extinct where\napplicable.\n\n### Straight-up JS\n\nFrameworks are excellent. You should use one. \\\\n doesn’t advocate any\none framework in favor of another; this choice should be left up to the\ndevelopment team. For this reason, any plugins/extensions/core-parts\nshould be agnostic to any given framework.\n\n## Theoretical Applications\n\nIn theory, much of \\\\n could be ported to another framework outside of\nnode (apache, nginx, etc.), or paired with different code (php, java,\netc.). If this means providing a better user experience than the\nexisting platform \\\\n would be replacing, then by all means it’s a win.\n\n## Firing it up\n\nThe entry point to the app is the `nooline.js` file, and it takes a single argument, which is the port on which \\\\n should run.  `sudo` where appropriate.  You can also output to logs using `stdin` and `stdout`.  For example:\n\n    node nooline.js 8888 1>>debug.log 2>>error.log\n\nThe above code will start \\n running on port 8888, while outputting to text log files.\n\nThe `start.sh` script automatically does this for port 80 (remember to `sudo`):\n\n    sudo ./start.sh\n\nRight now, \\\\n only runs on POSIX-compliant systems, as I haven't added the ability to check for a Windows file structure yet.  This is an easy fix, for you folks running Windows, in that all you'll need to do is change the paths to reflect your environment.\n\n## Want to contribute?\n\nThe following things are officially on the list of things which need\ndoing:\n-   Add a WYSIWYG\n-   Flesh out the Admin Control Panel\n-   Create finer grain “edit statuses” (added vs. edited, preview, etc.)\n-   Add user roles & permissions\n-   Build better security checks\n-   Implement a drop-dead simple, super extra easy plugin system\n-   Implement cluster in node\n-   Add periodic HTML snapshotting, rather than at startup\n-   Rename process (once working in Mac OS)\n\nHead on over to [the github repo][] and submit a pull request!\n\n✌\n\n[“noosphere”]: http://en.wikipedia.org/wiki/Noosphere\n[Eric Raymond’s article]: http://www.catb.org/~esr/writings/homesteading/homesteading/\n[The Unix Philosophy]: http://en.wikipedia.org/wiki/Unix_philosophy\n[the github repo]: https://github.com/StrictlySkyler/nooline\n",
  "readmeFilename": "README.markdown",
  "_id": "nooline@0.1.9",
  "dist": {
    "shasum": "f648795bf2dfa3dd271afa319bb1140ffb766a4b"
  },
  "_from": "nooline@",
  "_resolved": "https://registry.npmjs.org/nooline/-/nooline-0.1.9.tgz"
}
